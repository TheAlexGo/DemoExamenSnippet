<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>AddEditPage CSharp Snippet</Title>
			<Shortcut>AddEditPageCS</Shortcut>
		</Header>
		<Snippet>
			<Code Language="CSharp">
				<![CDATA[
using Microsoft.Win32;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Navigation;
using WPF_Demo_Exam.Models;
using System.IO;

namespace WPF_Demo_Exam.Pages
{
    /// <summary>
    /// Логика взаимодействия для AddEditPage.xaml
    /// </summary>
    public partial class AddEditPage : Page
    {
        private Product _currentProduct = null;
        private byte[] _mainImageData;
        public AddEditPage()
        {
            InitializeComponent();
        }

        public AddEditPage(Product product)
        {
            InitializeComponent();

            _currentProduct = product;
            Title = "Редактировать услугу";
            TBoxTitle.Text = _currentProduct.ProductName;
            TBoxCost.Text = _currentProduct.ProductCost.ToString("N2");
            TBoxManufacturer.Text = _currentProduct.ProductManufacturer.ToString();
            TBoxDescription.Text = _currentProduct.ProductDescription;
            if (_currentProduct.ProductDiscountAmount > 0)
                TBoxDiscount.Text = _currentProduct.ProductDiscountAmount.ToString();
            if (_currentProduct.ProductPhoto != null)
                ImageProduct.Source = (ImageSource)new ImageSourceConverter().ConvertFrom(_currentProduct.ProductPhoto);
            else
                ImageProduct.Source = (ImageSource)Resources.FindName("noPhoto.jpg");
        }

        private void BtnSelectImage_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            ofd.Filter = "Image |*.png; *.jpg; *.jpeg";
            if (ofd.ShowDialog() == true)
            {
                _mainImageData = File.ReadAllBytes(ofd.FileName);
                ImageProduct.Source = (ImageSource)new ImageSourceConverter().ConvertFrom(_mainImageData);
            }

            if (_currentProduct == null)
            {
                var product = new Product
                {
                    ProductName = TBoxTitle.Text,
                    ProductCost = decimal.Parse(TBoxCost.Text),
                    ProductManufacturer = int.Parse(TBoxManufacturer.Text),
                    ProductDescription = TBoxDescription.Text,
                    ProductDiscountAmount = string.IsNullOrWhiteSpace(TBoxDiscount.Text) ? 0 : double.Parse(TBoxDiscount.Text) / 100,
                    ProductPhoto = _mainImageData
                };
                App.Context.Products.Add(product);
                App.Context.SaveChanges();
                MessageBox.Show($"Добавление продукта \"{product.ProductName}\" успешно выполнено", 
                    "Удачно", MessageBoxButton.OK, MessageBoxImage.Information);
            }
            else
            {
                _currentProduct.ProductName = TBoxTitle.Text;
                _currentProduct.ProductCost = decimal.Parse(TBoxCost.Text);
                _currentProduct.ProductManufacturer = int.Parse(TBoxManufacturer.Text);
                _currentProduct.ProductDescription = TBoxDescription.Text;
                _currentProduct.ProductDiscountAmount = string.IsNullOrWhiteSpace(TBoxDiscount.Text) ? 0 : double.Parse(TBoxDiscount.Text) / 100;
                if (_mainImageData != null)
                    _currentProduct.ProductPhoto= _mainImageData;
                App.Context.SaveChanges();
            }

            NavigationService.GoBack();
        }

        private void BtnSave_Click(object sender, RoutedEventArgs e)
        {
            var errorMessage = CheckErrors();
            if (errorMessage.Length > 0)
                MessageBox.Show(errorMessage, "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            else
            {
                if (_currentProduct == null)
                {
                    var product = new Product
                    {
                        ProductName = TBoxTitle.Text,
                        ProductCost = decimal.Parse(TBoxCost.Text),
                        ProductManufacturer = int.Parse(TBoxManufacturer.Text),
                        ProductDiscountAmount = string.IsNullOrWhiteSpace(TBoxDiscount.Text) ? 0 : double.Parse(TBoxDiscount.Text) / 100
                    };
                    App.Context.Products.Add(product);
                    App.Context.SaveChanges();
                }
                else
                {
                    _currentProduct.ProductName = TBoxTitle.Text;
                    _currentProduct.ProductCost = decimal.Parse(TBoxCost.Text);
                    _currentProduct.ProductManufacturer = int.Parse(TBoxManufacturer.Text);
                    _currentProduct.ProductDescription = TBoxDescription.Text;
                    _currentProduct.ProductDiscountAmount = string.IsNullOrWhiteSpace(TBoxDiscount.Text) ? 0 : double.Parse(TBoxDiscount.Text) / 100;
                    App.Context.SaveChanges();
                }
                NavigationService.GoBack();
            }
        }

        public string CheckErrors()
        {
            var errorBuilder = new StringBuilder();

            if (string.IsNullOrWhiteSpace(TBoxTitle.Text))
                errorBuilder.AppendLine("Название услуги обязательно для заполнения;");

            var serviceFromDB = App.Context.Products.ToList()
                .FirstOrDefault(p => p.ProductArticleNumber == _currentProduct?.ProductArticleNumber);
            if (serviceFromDB != null && _currentProduct == null)
                errorBuilder.AppendLine("Такая услуга уже есть в базе данных;");

            decimal cost = 0;
            if (decimal.TryParse(TBoxCost.Text, out cost) == false || cost <= 0)
                errorBuilder.AppendLine("Стоимость услуги должна быть положительным числом;");

            if (!string.IsNullOrEmpty(TBoxDiscount.Text))
            {
                int discount = 0;
                if (int.TryParse(TBoxDiscount.Text, out discount) == false || discount < 0 || discount > 100)
                    errorBuilder.AppendLine("Размер скидки - целое число в диапазоне от 0 до 100%;");
            }

            if (errorBuilder.Length > 0)
                errorBuilder.Insert(0, "Устраните следующие ошибки:\n");

            return errorBuilder.ToString();
        }
    }
}
				]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>